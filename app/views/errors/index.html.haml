- @title = t('views.errors.index.title')

%h1 Reported errors on project #{@project.name}

- if @project.admin_member?(current_user)
  %span=link_to 'Edit this project', edit_project_url(@project)
  |
  %span=link_to 'Delete this project', project_url(@project), :method => :delete, :confirm => "Do you really want to delete the project #{@project.name}? There is no way back!"

= form_tag project_errors_url(@project.id), :method => :get do
  %p
    %label
      Limit to:
      = select_tag 'resolved', options_for_select({:resolved => 'y', :pending => 'n', :all => 'a'}, params[:resolved] || nil)
    %label
      Order by:
      = select_tag 'sort_by', options_for_select({:date => 'last_raised_at', 'number of comments' => 'nb_comments', 'number of errors' => 'count'}, params[:sort_by] || 'last_raised_at')
    %label
      Ascending order
      = check_box_tag 'asc_order', 1, params[:asc_order]
    %label
      Search:
      = text_field_tag 'search', params[:search]
    = submit_tag 'Filter'


%table
  %thead
    %tr
      %th Message
      %th Last raised on
      %th Count
      %th Number of comments
      %th Resolved?
  %tbody
    - @errors.each do |error|
      %tr
        %td=link_to h(error.message), project_error_path(@project, error)
        %td= error.last_raised_at
        %td= error.count
        %td= error.comments.size
        %td= image_tag( error.resolved ? 'accept-icon.png' : 'delete-icon.png')

= will_paginate @errors

